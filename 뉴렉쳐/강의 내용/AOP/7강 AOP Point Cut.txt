Spring이 구현하는 AOP를 사용할 때는 PointCut과 JoinPoint, weaving이라는 용어가 사용된다.

AOP는 Proxy를 가지고 있고, Proxy를 통해서 보조업무로직을 호출하는 구조이다.

객체 => Proxy(Cross-cutting Concern) => Core Concern => Proxy(Cross-cutting Concern) => 객체
마치 뜨개질과 같은 연결과정을 보여준다. (Weaving)

Weaving을 할 때, 보조업무로직이 연결되는 대상으로 삼고 있는 메서드(Core Concern)가 
Proxy 부분이 연결해야할 포인트 점이 된다. (Join Point)

객체를 타겟으로 지정하니, 객체 내부의 메서드에도 weaving이 일어나게 된다.
여기서 모든 메서드가 아닌 특정 메서드만 weaving을 하고 싶을 때는 어떻게 해야하나?
=> 별도의 정보를 설정해야함. 그것이 PointCut임.


PointCut 만드는 방법
1. <bean id="classicPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut"> 생성
2. Property를 지정해준다. 이때 name은 mappedName이고, value는 PointCut을 지정할 메서드로 한다.

3. advice 대신 사용해줄 advisor을 만든다. 프로퍼티는 미리 정의된것임 ex)setAdvice.
=> ref는 pointCut을 적용할 advice의 class를 나타내는 name을 명시해준다.
<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"></property>
		<property name="pointcut" ref="classicPointCut" ></property>
	</bean>

4. 이후 객체의 참조목록에서 설정을 변경하여 위빙을 통제 한다. .

<value>logAroundAdvice</value> 를
<value>classicAroundAdvisor</value>로 미리 설정한 advisor의 id로 변경한다.