<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
<!-- 	지시서이기 때문에 데이터 기반으로 써야함. Bean이라는 태그를 이용하여야한다. -->
<!-- 	id 에는 변수명, class에는 생성할 객체명을 사용한다. 이떄, 객체는 같은 이름의 클래스를 사용하는 -->
<!-- 	다른 객체가 존재할 수 있으니, 패키지 명까지 같이 명시해준다. -->
	
<!-- 	Exam exam = new NewlecExam(); 와 동일 -->
	<bean id="exam" class="spring.di.entity.NewlecExam">
	
<!-- 아래 주석처리 된 것은 생성자를 통해 설정하는 방법과 중복되기 때문에 주석처리함.	 -->
	<!-- 	여기서 우리가 value값을 줄 수도 있다. 하지만 이런 상태로 바로 하면 오류가 난다. -->
	<!-- 	이유는 kor이라는 java값에 setKor이라는 것이 없기때문이다. -->
	<!-- 	<property name="kor" value="10"/> -->
	<!-- 	<property name="eng" value="10"/> -->
	<!-- 	<property name="math" value="10"/> -->
	<!-- 	<property name="com"> -->
	<!-- 		<value>10</value> -->
	<!-- 	</property> -->

	<!-- 이렇게 constructor-arg를 지정하면 순서대로 생성자를 주게된다. 순서를 지정 할 수 있는 방법은 
	index를 주어서 순서를 만들 수 있다. -->
	<constructor-arg index="kor" value = "10"/>
	<constructor-arg index="com" value = "20"/>
	<constructor-arg index="eng" value = "30"/>
	<constructor-arg index="math" value = "40"/>
	
	</bean>
	
<!-- 	ExamConsole console = new GridExamConsole(); -->
	<bean id="console" class="spring.di.ui.InlineExamConsole">

<!-- 	console.setExam(exam); -->
	<property name="exam" ref="exam"/>
<!-- 	console의 메서드로 온 setExam은 property name으로 온다. 하지만 -->
<!-- 	지시서 규칙상, set은 생략하고 소문자로 사용하기 때문에 exam이 된다. -->
<!-- 	즉, name ="exam"은 setExam을 호출하는 함수이다, 파라미터의 exam이 name으로 온 것이아니다. -->
<!-- 	또한 value와 ref라는 속성이 있다. (name으로 쓰여진 함수의 파라미터 인 듯.) -->
<!-- 	value 타입이면 value, ref 타입이면 ref에 변수의 그 파라미터 객체의 이름(변수명)을 적어준다. -->
	
	</bean>

</beans>
